{"version":3,"file":"static/js/259.520e5218.chunk.js","mappings":"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","sources":["components/Card/index.js","components/PokemonList/PokemonListItem/index.js","components/PokemonList/index.js","api/api-client.js","state/atoms.js","utils/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst arePropsEqual = (prevProps, nextProps) => (\n  prevProps.title === nextProps.title && prevProps.subtitle === nextProps.subtitle\n);\n\nconst Card = (props) => {\n  const renderTitle = () => (\n    <h1 className=\"code f4 ttc bg-red washed-yellow ma0 pv1 br2 br--top\" style={props.titleStyle}>\n      {props.title}\n      {\n        props.subtitle && (\n          <span className=\"courier f6 db\" style={props.subtitleStyle}>\n            {props.subtitle}\n          </span>\n        )\n      }\n    </h1>\n  );\n\n  const renderImage = () => (\n    props.imageSource && (\n      <img\n        src={props.imageSource}\n        className=\"db center mt1 ph1 h5 w5\"\n        style={props.imageStyle}\n        alt=\"pokemon\"\n      />\n    )\n  );\n\n  const renderContent = () => (\n    props.children ? props.children : <p style={props.textContentStyle}>{props.textContent}</p>\n  );\n\n  return (\n    <div className=\"mh1 mv3\" style={props.containerStyle} onClick={props.onClickHandler}>\n      <div className=\"tc bg-washed-yellow br2 shadow-5\" style={props.contentContainerStyle}>\n        {renderTitle()}\n        {renderImage()}\n        {renderContent()}\n      </div>\n    </div>\n  );\n};\n\nCard.displayName = 'Card';\n\nCard.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  imageSource: PropTypes.string,\n  textContent: PropTypes.string,\n  onClickHandler: PropTypes.func,\n  children: PropTypes.element,\n  titleStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number\n  ]),\n  subtitleStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number\n  ]),\n  imageStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number\n  ]),\n  textContentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number\n  ]),\n  containerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number\n  ]),\n  contentContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number\n  ]),\n};\n\nexport default React.memo(Card, arePropsEqual);\n","import React from 'react';\nimport { useSetAtom } from 'jotai';\nimport PropTypes from 'prop-types';\nimport Card from 'components/Card';\nimport { isPopupVisibleAtom, selectedPokemonAtom } from 'state/atoms';\nimport { padString } from 'utils';\n\nconst PokemonListItem = ({ data }) => {\n  const setSelectedPokemon = useSetAtom(selectedPokemonAtom);\n  const setIsPopupVisible = useSetAtom(isPopupVisibleAtom);\n  const id = padString(data.id);\n\n  const showSelectedPokemon = () => {\n    setSelectedPokemon(data);\n    setIsPopupVisible(true);\n  };\n\n  return (\n    <div className=\"grow pointer\">\n      <Card\n        title={data.name}\n        subtitle={`#${id}`}\n        imageSource={`${process.env.REACT_APP_POKE_IMG_BASE_URL}/${id}.png`}\n        onClickHandler={showSelectedPokemon}\n      />\n    </div>\n  );\n};\n\nPokemonListItem.propTypes = {\n  data: PropTypes.object\n};\n\nexport default PokemonListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useAtomValue } from 'jotai';\nimport { asyncPokemonListAtom } from 'state/atoms';\nimport PokemonListItem from './PokemonListItem';\n\nconst PokemonList = (props) => {\n  const pokemonList = useAtomValue(asyncPokemonListAtom);\n\n  return (\n    <div className={`flex flex-wrap justify-around ${props.cssClass}`}>\n      {pokemonList.map((listItem) => <PokemonListItem key={listItem.id} data={listItem} />)}\n    </div>\n  );\n};\n\nPokemonList.propTypes = {\n  cssClass: PropTypes.string\n};\n\nexport default PokemonList;\n","const apiClient = {\n  get: async (url) => {\n    return fetch(url).then(async (response) => {\n      const data = await response.json();\n      return response.ok ? data : Promise.reject(data);\n    });\n  },\n  // post/put/delete not needed currently\n};\n\nexport default apiClient;\n","import { atom } from 'jotai';\nimport apiClient from 'api/api-client';\n\nexport const asyncPokemonListAtom = atom(async () => {\n  const response = await apiClient.get(`${process.env.REACT_APP_POKE_API_BASE_URL}?limit=151`);\n  const pokemonList = await Promise.all(response.results.map((item) => apiClient.get(item.url)));\n  return pokemonList;\n});\n\nexport const selectedPokemonAtom = atom({});\n\nexport const isPopupVisibleAtom = atom(false);\n","export const padString = (value, targetLength = 3, charToPad = '0', padPosition = 'start') => {\n  const str = value.toString();\n  const methodName = padPosition === 'start' ? 'padStart' : 'padEnd';\n  return str[methodName](targetLength, charToPad);\n};\n"],"names":["arePropsEqual","prevProps","nextProps","title","subtitle","Card","props","_jsx","className","style","containerStyle","onClick","onClickHandler","children","_jsxs","contentContainerStyle","titleStyle","subtitleStyle","imageSource","src","imageStyle","alt","textContentStyle","textContent","displayName","React","_ref","data","setSelectedPokemon","useSetAtom","selectedPokemonAtom","setIsPopupVisible","isPopupVisibleAtom","id","padString","name","concat","process","pokemonList","useAtomValue","asyncPokemonListAtom","cssClass","map","listItem","PokemonListItem","apiClient","get","_get","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","url","wrap","_context2","prev","next","abrupt","fetch","then","_callee","response","_context","json","sent","ok","Promise","reject","stop","_x2","apply","arguments","_x","atom","all","results","item","value","targetLength","length","undefined","charToPad","padPosition","toString"],"sourceRoot":""}